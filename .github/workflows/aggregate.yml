name: Aggregated Lighthouse Tests

on:
  workflow_dispatch:

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Lighthouse CI
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      # Run Lighthouse CI multiple times (e.g., 3 runs)
      - name: Run Lighthouse CI multiple times
        run: |
          npx -p @lhci/cli lhci collect --url https://example.com -n 3 --outputDir ./lhci_reports

      # Process Lighthouse reports to calculate 95th percentile
      - name: Process Lighthouse reports for 95th percentile
        run: |
          # Install dependencies to process the reports
          npm install fs
          # Create a script to calculate the 95th percentile and generate an aggregated HTML report
          echo '
          const fs = require("fs");
          const path = require("path");

          // Read the collected reports
          const reportsDir = "./lhci_reports";
          const files = fs.readdirSync(reportsDir).filter(file => file.endsWith(".json"));

          const performanceScores = [];

          files.forEach(file => {
            const report = JSON.parse(fs.readFileSync(path.join(reportsDir, file), "utf-8"));
            performanceScores.push(report.categories.performance.score);
          });

          // Calculate 95th percentile
          const sortedScores = performanceScores.sort((a, b) => a - b);
          const percentile95 = sortedScores[Math.floor(0.95 * sortedScores.length)];

          // Generate the aggregate report
          const aggregateReport = {
            performanceScore: percentile95 * 100,
            reports: files
          };

          // Generate HTML report using double quotes and escaped characters
          const aggregateHtml = \"
          <!DOCTYPE html>
          <html lang=\\\"en\\\">
          <head>
            <meta charset=\\\"UTF-8\\\">
            <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">
            <title>Aggregated Lighthouse Report</title>
          </head>
          <body>
            <h1>Aggregated Lighthouse Report</h1>
            <h2>95th Percentile Performance Score: \\${percentile95 * 100}%</h2>
            <h3>Raw Reports:</h3>
            <pre>\\${JSON.stringify(aggregateReport, null, 2)}</pre>
          </body>
          </html>
          \";

          // Save the aggregated HTML report
          fs.writeFileSync("./lhci_reports/aggregate_report.html", aggregateHtml, "utf-8");
          ' > ./process-reports.js
          
          # Run the script to process the reports and generate the aggregate HTML
          node ./process-reports.js

      # Upload Lighthouse Reports as Artifacts
      - name: Upload Lighthouse Reports as Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: ./lhci_reports
